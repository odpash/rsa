package com.example.myapplication;

import android.app.Notification;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.preference.PreferenceManager;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.NotificationCompat;
import androidx.core.app.NotificationManagerCompat;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.concurrent.TimeUnit;

import javax.net.ssl.HttpsURLConnection;


public class MainActivity extends AppCompatActivity {

    private NotificationManagerCompat notificationManagerCompat;
    private EditText editTextTitle;
    private EditText editTextMessage;
    private Button button1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.registration_first);
        SharedPreferences myPreferences
                = PreferenceManager.getDefaultSharedPreferences(MainActivity.this);
        String n = myPreferences.getString("NAME", "unknown");
        String p = myPreferences.getString("PASS", "unknown");
        if (!n.equals("unknown")){
            Intent intent = new Intent(MainActivity.this, AddFriends.class);
            startActivity(intent);
        }
        this.editTextTitle = (EditText) this.findViewById(R.id.editText_title);
        this.editTextMessage = (EditText) this.findViewById(R.id.editText_message);
        this.button1 = (Button) this.findViewById(R.id.button1);
        this.button1.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View view) {
                String name = get_inp_1();
                String password = get_inp_2();
                SendToBase("https://olegpash.work/auth/" + name + "/" + password);


            }
        });
        //
        this.notificationManagerCompat = NotificationManagerCompat.from(this);
    }
    private static String readStream(InputStream is) throws IOException {
        StringBuilder sb = new StringBuilder();
        BufferedReader r = new BufferedReader(new InputStreamReader(is),1000);
        for (String line = r.readLine(); line != null; line =r.readLine()){
            sb.append(line);
        }
        is.close();
        return sb.toString();
    }

    public void SendToBase(String FF)
    {
        new Thread(new Runnable() {

            @Override
            public void run() {
                URL url;
                HttpsURLConnection connection = null;

                try {
                    url = new URL(FF);
                    connection = (HttpsURLConnection) url.openConnection();
                    BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream()));

                    String line = br.readLine();
                    //Log.d("HTTP-GET", line);
                    line = line.substring(1, line.length() - 1);
                    String[] words = line.split(" ");


                    if (words[0].equals("false")){
                        new Handler(Looper.getMainLooper()).post(() -> {
                            Toast toast = Toast.makeText(MainActivity.this, "Введен неправильный пароль. Попробуйте еще раз!", Toast.LENGTH_LONG);
                            toast.show();
                        });
                    }
                    else{
                        SharedPreferences myPreferences
                                = PreferenceManager.getDefaultSharedPreferences(MainActivity.this);
                        SharedPreferences.Editor myEditor = myPreferences.edit();
                        String name = get_inp_1();
                        String password = get_inp_2();
                        myEditor.putString("NAME", name);
                        myEditor.putString("PASS", password);
                        myEditor.commit();

                        sendOnChannel1("ваш User_id: " + words[1]);
                        //sendOnChannel1("ваш User_id: " + n + p);

                        Intent intent = new Intent(MainActivity.this, AddFriends.class);
                        startActivity(intent);
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                } finally {
                    if (connection != null) {
                        connection.disconnect();
                    }
                }
            }
        }).start();
    }

    private String get_inp_1()  {
        return this.editTextTitle.getText().toString();
    }
    private String get_inp_2()  {
        return this.editTextMessage.getText().toString();
    }

    private void sendOnChannel1(String x)  {
        String title = "Вы успешно прошли авторизацию!";
        String message = "Имя: " +
                this.editTextTitle.getText().toString() + ", пароль: " + this.editTextMessage.getText().toString() + ", " + x;

        Notification notification = new NotificationCompat.Builder(this, NotificationApp.CHANNEL_1_ID)
                .setSmallIcon(R.drawable.ic_launcher_background)
                .setContentTitle(title)
                .setContentText(message)
                .setPriority(NotificationCompat.PRIORITY_HIGH)
                .setCategory(NotificationCompat.CATEGORY_MESSAGE)
                .build();
        int notificationId = 1;
        this.notificationManagerCompat.notify(notificationId, notification);


    }


}
